"""
Django settings for django_app project.

Generated by 'django-admin startproject' using Django 3.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u2@xfs3ph)ux(1592%ts&wqaid)no390cmkc0^+xvt=!=*mq$('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost",  '35.147.29.133', "0.0.0.0", '127.0.0.1', '192.168.1.174']

# Application definition
SITE_ID = 2

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    'PIL',
    'crispy_forms',
    'django_summernote',
    'django_plotly_dash.apps.DjangoPlotlyDashConfig',
    'dash_leaflet',

    'home.apps.HomeConfig',
    'shop.apps.ShopConfig',
    'user_account.apps.AccountConfig',
    'event_calendar.apps.EventCalendarConfig',
    'checkout.apps.CheckoutConfig',

]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        # 'APP': {
        #             'client_id': '509601296924-cu0fv3pm6l23od5gl4qkuodbk9l5dgkl.apps.googleusercontent.com',
        #             'secret': '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',
        #             'key': ''
        #         },
        'SCOPE':{
            'profile',
            'email'
        },
        'AUTH_PARAMS': {
            'access_type': 'online'
        }
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django_plotly_dash.middleware.BaseMiddleware',
    'django_plotly_dash.middleware.ExternalRedirectionMiddleware',
]

ROOT_URLCONF = 'django_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            # os.path.join(BASE_DIR, 'templates', 'allauth')
            # BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'debug': False,
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_app.wsgi.application'

# Application ID: sandbox-sq0idb-ed6yyJo6Dh6CJmF4uBw-oQ
SQUARE_ACCESS_TOKEN = 'EAAAEP8vREYzzh4ngFpprCUkV3IrG-QY97P0QTEaF3VifEsfG6ebph9AZvezMhus'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'main_street_coffee',
        'USER': 'postgres',
        'PASSWORD': '12a10l1k',
        'HOST': 'localhost',
        'PORT': ''
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Plotly
ASGI_APPLICATION = 'django_dash.routing.application'

PLOTLY_COMPONENTS = [
    # Common components
    'dash_core_components',
    'dash_html_components',
    'dash_renderer',
    # django-plotly-dash components
    'dpd_components',
    # static support if serving local assets
    'dpd_static_support',
    # Other components, as needed
    # 'dash_bootstrap_components',
    'dash_leaflet',
    # 'dash_deck',
    # 'pydeck'
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_LOCATION = 'static'

STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')
# STATIC_URL = '{}/{}/'.format(AWS_S3_ENDPOINT_URL, AWS_LOCATION)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

SUMMERNOTE_THEME = 'bs4'
SUMMERNOTE_CONFIG = {
    'iframe': True,
    'summernote': {
        # As an example, using Summernote Air-mode
        'airMode': False,
        # Change editor size
        'width': '100%',
        'height': '480',
        # Use proper language setting automatically (default)
        'lang': None,
        # Toolbar customization
        # https://summernote.org/deep-dive/#custom-toolbar-popover
        'toolbar': [
            ['style', ['style']],
            ['font', ['bold', 'underline', 'clear']],
            ['fontname', ['fontname']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['table', ['table']],
            ['insert', ['link', 'picture', 'video']],
            ['view', ['fullscreen', 'codeview', 'help']],
        ],
        'codemirror': {
            'mode': 'htmlmixed',
            'lineNumbers': 'true',
            # You have to include theme file in 'css' or 'css_for_inplace' before using it.
            'theme': 'monokai',
        },
        # 'js': {
        #     'https://pipinstallpython.pythonanywhere.com/static/vendor/jquery/dist/jquery.min.js',
        #     'https://pipinstallpython.pythonanywhere.com/static/vendor/bootstrap/dist/js/bootstrap.bundle.min.js',
        #     'https://pipinstallpython.pythonanywhere.com/static/vendor/jquery.scrollbar/jquery.scrollbar.min.js',
        #     'https://pipinstallpython.pythonanywhere.com/static/vendor/jquery-scroll-lock/dist/jquery-scrollLock.min.js',
        #     'https://pipinstallpython.pythonanywhere.com/static/vendor/onscreen/dist/on-screen.umd.min.js'
        # },
        # 'css': {
        #     'https://pipinstallpython.pythonanywhere.com/static/summernote/summernote-lite.css',
        #     'https://pipinstallpython.pythonanywhere.com/static/summernote/summernote.css'
        # },

    },
}

X_FRAME_OPTIONS = 'SAMEORIGIN'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = (
    'user_account.backends.EmailBackend',  # Path to your custom backend
    "django.contrib.auth.backends.ModelBackend",
    'allauth.account.auth_backends.AuthenticationBackend'
)

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

SOCIALACCOUNT_LOGIN_ON_GET = True

CRISPY_TEMPLATE_PACK = 'bootstrap4'

